@page "/subaccounts"
@using Task_ERP_Bar.Models
@using Task_ERP_Bar.Services
@inject IApiService ApiService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>إدارة الحسابات الفرعية - ERP System</PageTitle>

<!-- Header Section -->
<header class="bg-warning text-dark p-3 rounded shadow-sm">
    <div class="container-fluid">
        <div class="d-flex align-items-center justify-content-between flex-wrap">
            <div class="d-flex align-items-center gap-3">
                <h4 class="mb-0">
                    <i class="bi bi-diagram-3 me-2"></i>
                    @(selectedLanguage == "Arabic" ? "إدارة الحسابات الفرعية" : "Sub Accounts Management")
                </h4>
            </div>
            
            <div class="d-flex align-items-center gap-3">
                <!-- Language Dropdown -->
                <div class="dropdown">
                    <button class="btn btn-outline-dark btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                        <i class="bi bi-globe me-1"></i>
                        @selectedLanguage
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" @onclick="@(() => ChangeLanguage("English"))">English</a></li>
                        <li><a class="dropdown-item" href="#" @onclick="@(() => ChangeLanguage("Arabic"))">العربية</a></li>
                    </ul>
                </div>

                <!-- Add New Button -->
                <button class="btn btn-dark" @onclick="AddNewSubAccount">
                    <i class="bi bi-plus-circle me-1"></i>
                    @(selectedLanguage == "Arabic" ? "إضافة حساب فرعي جديد" : "Add New Sub Account")
                </button>
            </div>
        </div>
    </div>
</header>

<!-- Alert Messages -->
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show m-3" role="alert">
        <i class="bi bi-exclamation-triangle me-2"></i>
        @errorMessage
        <button type="button" class="btn-close" @onclick="() => errorMessage = string.Empty" aria-label="Close"></button>
    </div>
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success alert-dismissible fade show m-3" role="alert">
        <i class="bi bi-check-circle me-2"></i>
        @successMessage
        <button type="button" class="btn-close" @onclick="() => successMessage = string.Empty" aria-label="Close"></button>
    </div>
}

<!-- Search and Filter Section -->
<div class="bg-light p-3 border-bottom">
    <div class="container-fluid">
        <div class="row g-3 align-items-end">
            <div class="col-md-3">
                <label class="form-label fw-bold">
                    <i class="bi bi-search me-1"></i>
                    @(selectedLanguage == "Arabic" ? "البحث" : "Search")
                </label>
                <input type="text" 
                       class="form-control" 
                       @bind="searchTerm" 
                       @bind:event="oninput"
                       placeholder="@(selectedLanguage == "Arabic" ? "ابحث في الحسابات الفرعية..." : "Search sub accounts...")" />
            </div>
            
            <div class="col-md-2">
                <label class="form-label fw-bold">
                    <i class="bi bi-building me-1"></i>
                    @(selectedLanguage == "Arabic" ? "الفرع" : "Branch")
                </label>
                <select class="form-select" @bind="selectedBranchId">
                    <option value="0">@(selectedLanguage == "Arabic" ? "جميع الفروع" : "All Branches")</option>
                    @if (branches != null)
                    {
                        @foreach (var branch in branches)
                        {
                            <option value="@branch.BranchID">
                                @(selectedLanguage == "Arabic" ? branch.BranchNameAr : branch.BranchNameEn)
                            </option>
                        }
                    }
                </select>
            </div>
            
            <div class="col-md-2">
                <label class="form-label fw-bold">
                    <i class="bi bi-layers me-1"></i>
                    @(selectedLanguage == "Arabic" ? "المستوى" : "Level")
                </label>
                <select class="form-select" @bind="selectedLevelId">
                    <option value="0">@(selectedLanguage == "Arabic" ? "جميع المستويات" : "All Levels")</option>
                    @if (levels != null)
                    {
                        @foreach (var level in levels)
                        {
                            <option value="@level.LevelID">
                                @(selectedLanguage == "Arabic" ? level.LevelNameAr : level.LevelNameEn)
                            </option>
                        }
                    }
                </select>
            </div>
            
            <div class="col-md-2">
                <label class="form-label fw-bold">
                    <i class="bi bi-funnel me-1"></i>
                    @(selectedLanguage == "Arabic" ? "الحالة" : "Status")
                </label>
                <select class="form-select" @bind="selectedStatus">
                    <option value="">@(selectedLanguage == "Arabic" ? "جميع الحالات" : "All Status")</option>
                    <option value="true">@(selectedLanguage == "Arabic" ? "نشط" : "Active")</option>
                    <option value="false">@(selectedLanguage == "Arabic" ? "غير نشط" : "Inactive")</option>
                </select>
            </div>
            
            <div class="col-md-3">
                <button class="btn btn-warning w-100" @onclick="LoadSubAccounts" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                    }
                    <i class="bi bi-arrow-clockwise me-1"></i>
                    @(selectedLanguage == "Arabic" ? "تحديث" : "Refresh")
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Main Content -->
<div class="container-fluid mt-4">
    @if (isLoading && subAccounts == null)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-warning" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3">@(selectedLanguage == "Arabic" ? "جاري تحميل الحسابات الفرعية..." : "Loading sub accounts...")</p>
        </div>
    }
    else if (filteredSubAccounts?.Any() == true)
    {
        <div class="card shadow-sm">
            <div class="card-header bg-warning text-dark">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="bi bi-table me-2"></i>
                        @(selectedLanguage == "Arabic" ? "قائمة الحسابات الفرعية" : "Sub Accounts List")
                    </h5>
                    <span class="badge bg-dark text-light">
                        @filteredSubAccounts.Count @(selectedLanguage == "Arabic" ? "حساب فرعي" : "sub accounts")
                    </span>
                </div>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-warning">
                            <tr>
                                <th style="width: 80px;" class="text-center">#</th>
                                <th style="width: 120px;">
                                    <i class="bi bi-hash me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "رقم الحساب" : "Account No.")
                                </th>
                                <th style="width: 200px;">
                                    <i class="bi bi-diagram-3 me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "اسم الحساب الفرعي" : "Sub Account Name")
                                </th>
                                <th style="width: 120px;">
                                    <i class="bi bi-building me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "الفرع" : "Branch")
                                </th>
                                <th style="width: 100px;">
                                    <i class="bi bi-layers me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "المستوى" : "Level")
                                </th>
                                <th style="width: 100px;" class="text-center">
                                    <i class="bi bi-check-circle me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "الحالة" : "Status")
                                </th>
                                <th style="width: 150px;" class="text-center">
                                    <i class="bi bi-gear me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "الإجراءات" : "Actions")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var subAccount in filteredSubAccounts)
                            {
                                <tr>
                                    <td class="text-center fw-bold">@subAccount.SubAccountID</td>
                                    <td>
                                        <span class="badge bg-info text-dark">@subAccount.SubAccountNumber</span>
                                    </td>
                                    <td>
                                        <div>
                                            <strong>@(selectedLanguage == "Arabic" ? subAccount.SubAccountNameAr : subAccount.SubAccountNameEn)</strong>
                                            @if (!string.IsNullOrEmpty(subAccount.SubAccountNameEn) && selectedLanguage == "Arabic")
                                            {
                                                <br/><small class="text-muted">@subAccount.SubAccountNameEn</small>
                                            }
                                            @if (!string.IsNullOrEmpty(subAccount.SubAccountNameAr) && selectedLanguage == "English")
                                            {
                                                <br/><small class="text-muted">@subAccount.SubAccountNameAr</small>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        @{
                                            var branch = branches?.FirstOrDefault(b => b.BranchID == subAccount.BranchID);
                                        }
                                        @if (branch != null)
                                        {
                                            <span class="badge bg-secondary">
                                                @(selectedLanguage == "Arabic" ? branch.BranchNameAr : branch.BranchNameEn)
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        @{
                                            var level = levels?.FirstOrDefault(l => l.LevelID == subAccount.LevelID);
                                        }
                                        @if (level != null)
                                        {
                                            <span class="badge bg-primary">
                                                @(selectedLanguage == "Arabic" ? level.LevelNameAr : level.LevelNameEn)
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (subAccount.IsActive)
                                        {
                                            <span class="badge bg-success">
                                                <i class="bi bi-check-circle me-1"></i>
                                                @(selectedLanguage == "Arabic" ? "نشط" : "Active")
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">
                                                <i class="bi bi-x-circle me-1"></i>
                                                @(selectedLanguage == "Arabic" ? "غير نشط" : "Inactive")
                                            </span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-outline-warning btn-sm" 
                                                    @onclick="() => EditSubAccount(subAccount)"
                                                    title="@(selectedLanguage == "Arabic" ? "تعديل" : "Edit")">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button class="btn btn-outline-info btn-sm" 
                                                    @onclick="() => ViewSubAccount(subAccount)"
                                                    title="@(selectedLanguage == "Arabic" ? "عرض" : "View")">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                            <button class="btn btn-outline-danger btn-sm" 
                                                    @onclick="() => DeleteSubAccount(subAccount)"
                                                    title="@(selectedLanguage == "Arabic" ? "حذف" : "Delete")">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="card shadow-sm">
            <div class="card-body text-center py-5">
                <i class="bi bi-diagram-3 display-1 text-muted mb-3"></i>
                <h4 class="text-muted">
                    @(selectedLanguage == "Arabic" ? "لا توجد حسابات فرعية" : "No Sub Accounts Found")
                </h4>
                <p class="text-muted">
                    @(selectedLanguage == "Arabic" ? "لم يتم العثور على حسابات فرعية تطابق معايير البحث" : "No sub accounts match your search criteria")
                </p>
                <button class="btn btn-warning" @onclick="AddNewSubAccount">
                    <i class="bi bi-plus-circle me-1"></i>
                    @(selectedLanguage == "Arabic" ? "إضافة أول حساب فرعي" : "Add First Sub Account")
                </button>
            </div>
        </div>
    }
</div>

@code {
    private List<SubAccount> subAccounts = new();
    private List<Branch> branches = new();
    private List<SubAccounts_Level> levels = new();
    private string selectedLanguage = "Arabic";
    private bool isLoading = false;
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    
    // Filter properties
    private string searchTerm = string.Empty;
    private int selectedBranchId = 0;
    private int selectedLevelId = 0;
    private string selectedStatus = string.Empty;
    
    // Computed properties
    private List<SubAccount> filteredSubAccounts => subAccounts
        .Where(sa => string.IsNullOrEmpty(searchTerm) || 
                   sa.SubAccountNumber.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                   sa.SubAccountNameAr.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                   sa.SubAccountNameEn?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) == true)
        .Where(sa => selectedBranchId == 0 || sa.BranchID == selectedBranchId)
        .Where(sa => selectedLevelId == 0 || sa.LevelID == selectedLevelId)
        .Where(sa => string.IsNullOrEmpty(selectedStatus) || 
                   (selectedStatus == "true" && sa.IsActive) ||
                   (selectedStatus == "false" && !sa.IsActive))
        .ToList();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;
            StateHasChanged();

            // Load data in parallel
            var subAccountsTask = ApiService.GetAllAsync<SubAccount>("SubAccount");
            var branchesTask = ApiService.GetAllAsync<Branch>("Branch");
            var levelsTask = ApiService.GetAllAsync<SubAccounts_Level>("SubAccountsLevel");

            await Task.WhenAll(subAccountsTask, branchesTask, levelsTask);

            subAccounts = await subAccountsTask;
            branches = await branchesTask;
            levels = await levelsTask;

            successMessage = selectedLanguage == "Arabic" 
                ? $"تم تحميل {subAccounts.Count} حساب فرعي و {branches.Count} فرع و {levels.Count} مستوى"
                : $"Loaded {subAccounts.Count} sub accounts, {branches.Count} branches, and {levels.Count} levels";
        }
        catch (Exception ex)
        {
            errorMessage = selectedLanguage == "Arabic"
                ? $"خطأ في تحميل البيانات: {ex.Message}"
                : $"Error loading data: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadSubAccounts()
    {
        await LoadData();
    }

    private void AddNewSubAccount()
    {
        Navigation.NavigateTo("/subaccount-form");
    }

    private void EditSubAccount(SubAccount subAccount)
    {
        Navigation.NavigateTo($"/subaccount-form/{subAccount.SubAccountID}");
    }

    private void ViewSubAccount(SubAccount subAccount)
    {
        Navigation.NavigateTo($"/subaccount-details/{subAccount.SubAccountID}");
    }

    private async Task DeleteSubAccount(SubAccount subAccount)
    {
        try
        {
            var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", 
                selectedLanguage == "Arabic"
                    ? $"هل أنت متأكد من حذف الحساب الفرعي '{subAccount.SubAccountNameAr}'؟"
                    : $"Are you sure you want to delete sub account '{subAccount.SubAccountNameEn}'?");

            if (confirmed)
            {
                isLoading = true;
                StateHasChanged();

                var success = await ApiService.DeleteAsync("SubAccount", subAccount.SubAccountID);
                
                if (success)
                {
                    await LoadSubAccounts();
                    successMessage = selectedLanguage == "Arabic"
                        ? "تم حذف الحساب الفرعي بنجاح"
                        : "Sub account deleted successfully";
                }
                else
                {
                    errorMessage = selectedLanguage == "Arabic"
                        ? "فشل في حذف الحساب الفرعي"
                        : "Failed to delete sub account";
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = selectedLanguage == "Arabic"
                ? $"خطأ في حذف الحساب الفرعي: {ex.Message}"
                : $"Error deleting sub account: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void ChangeLanguage(string language)
    {
        selectedLanguage = language;
        StateHasChanged();
    }
} 