@page "/jv-details"
@using Task_ERP_Bar.Models
@using Task_ERP_Bar.Services
@inject IApiService ApiService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>تفاصيل القيود اليومية - ERP System</PageTitle>

<!-- Header Section -->
<header class="bg-secondary text-white p-3 rounded shadow-sm">
    <div class="container-fluid">
        <div class="d-flex align-items-center justify-content-between flex-wrap">
            <div class="d-flex align-items-center gap-3">
                <h4 class="mb-0">
                    <i class="bi bi-list-ul me-2"></i>
                    @(selectedLanguage == "Arabic" ? "تفاصيل القيود اليومية" : "Journal Voucher Details")
                </h4>
            </div>
            
            <div class="d-flex align-items-center gap-3">
                <!-- Language Dropdown -->
                <div class="dropdown">
                    <button class="btn btn-outline-light btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                        <i class="bi bi-globe me-1"></i>
                        @selectedLanguage
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" @onclick="@(() => ChangeLanguage("English"))">English</a></li>
                        <li><a class="dropdown-item" href="#" @onclick="@(() => ChangeLanguage("Arabic"))">العربية</a></li>
                    </ul>
                </div>

                <!-- Add New Button -->
                <button class="btn btn-light" @onclick="AddNewJVDetail">
                    <i class="bi bi-plus-circle me-1"></i>
                    @(selectedLanguage == "Arabic" ? "إضافة تفصيل جديد" : "Add New Detail")
                </button>
            </div>
        </div>
    </div>
</header>

<!-- Alert Messages -->
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show m-3" role="alert">
        <i class="bi bi-exclamation-triangle me-2"></i>
        @errorMessage
        <button type="button" class="btn-close" @onclick="() => errorMessage = string.Empty" aria-label="Close"></button>
    </div>
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success alert-dismissible fade show m-3" role="alert">
        <i class="bi bi-check-circle me-2"></i>
        @successMessage
        <button type="button" class="btn-close" @onclick="() => successMessage = string.Empty" aria-label="Close"></button>
    </div>
}

<!-- Search and Filter Section -->
<div class="bg-light p-3 border-bottom">
    <div class="container-fluid">
        <div class="row g-3 align-items-end">
            <div class="col-md-3">
                <label class="form-label fw-bold">
                    <i class="bi bi-search me-1"></i>
                    @(selectedLanguage == "Arabic" ? "البحث" : "Search")
                </label>
                <input type="text" 
                       class="form-control" 
                       @bind="searchTerm" 
                       @bind:event="oninput"
                       placeholder="@(selectedLanguage == "Arabic" ? "ابحث في التفاصيل..." : "Search details...")" />
            </div>
            
            <div class="col-md-2">
                <label class="form-label fw-bold">
                    <i class="bi bi-journal-text me-1"></i>
                    @(selectedLanguage == "Arabic" ? "رقم القيد" : "JV Number")
                </label>
                <select class="form-select" @bind="selectedJVId">
                    <option value="0">@(selectedLanguage == "Arabic" ? "جميع القيود" : "All Vouchers")</option>
                    @if (jvs != null)
                    {
                        @foreach (var jv in jvs)
                        {
                            <option value="@jv.JVID">
                                @jv.JVNumber - @jv.JVDate.ToString("dd/MM/yyyy")
                            </option>
                        }
                    }
                </select>
            </div>
            
            <div class="col-md-2">
                <label class="form-label fw-bold">
                    <i class="bi bi-building me-1"></i>
                    @(selectedLanguage == "Arabic" ? "الفرع" : "Branch")
                </label>
                <select class="form-select" @bind="selectedBranchId">
                    <option value="0">@(selectedLanguage == "Arabic" ? "جميع الفروع" : "All Branches")</option>
                    @if (branches != null)
                    {
                        @foreach (var branch in branches)
                        {
                            <option value="@branch.BranchID">
                                @(selectedLanguage == "Arabic" ? branch.BranchNameAr : branch.BranchNameEn)
                            </option>
                        }
                    }
                </select>
            </div>
            
            <div class="col-md-2">
                <label class="form-label fw-bold">
                    <i class="bi bi-currency-exchange me-1"></i>
                    @(selectedLanguage == "Arabic" ? "نوع المبلغ" : "Amount Type")
                </label>
                <select class="form-select" @bind="selectedAmountType">
                    <option value="">@(selectedLanguage == "Arabic" ? "جميع الأنواع" : "All Types")</option>
                    <option value="debit">@(selectedLanguage == "Arabic" ? "مدين" : "Debit")</option>
                    <option value="credit">@(selectedLanguage == "Arabic" ? "دائن" : "Credit")</option>
                </select>
            </div>
            
            <div class="col-md-3">
                <button class="btn btn-secondary w-100" @onclick="LoadJVDetails" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                    }
                    <i class="bi bi-arrow-clockwise me-1"></i>
                    @(selectedLanguage == "Arabic" ? "تحديث" : "Refresh")
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Main Content -->
<div class="container-fluid mt-4">
    @if (isLoading && jvDetails == null)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-secondary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-3">@(selectedLanguage == "Arabic" ? "جاري تحميل التفاصيل..." : "Loading details...")</p>
        </div>
    }
    else if (filteredJVDetails?.Any() == true)
    {
        <div class="card shadow-sm">
            <div class="card-header bg-secondary text-white">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="bi bi-table me-2"></i>
                        @(selectedLanguage == "Arabic" ? "قائمة تفاصيل القيود" : "JV Details List")
                    </h5>
                    <span class="badge bg-light text-dark">
                        @filteredJVDetails.Count @(selectedLanguage == "Arabic" ? "تفصيل" : "details")
                    </span>
                </div>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-secondary">
                            <tr>
                                <th style="width: 80px;" class="text-center">#</th>
                                <th style="width: 120px;">
                                    <i class="bi bi-journal-text me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "رقم القيد" : "JV Number")
                                </th>
                                <th style="width: 150px;">
                                    <i class="bi bi-bank me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "الحساب" : "Account")
                                </th>
                                <th style="width: 150px;">
                                    <i class="bi bi-diagram-3 me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "الحساب الفرعي" : "Sub Account")
                                </th>
                                <th style="width: 120px;">
                                    <i class="bi bi-building me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "الفرع" : "Branch")
                                </th>
                                <th style="width: 120px;" class="text-center">
                                    <i class="bi bi-currency-dollar me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "مدين" : "Debit")
                                </th>
                                <th style="width: 120px;" class="text-center">
                                    <i class="bi bi-currency-dollar me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "دائن" : "Credit")
                                </th>
                                <th style="width: 150px;" class="text-center">
                                    <i class="bi bi-gear me-1"></i>
                                    @(selectedLanguage == "Arabic" ? "الإجراءات" : "Actions")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detail in filteredJVDetails)
                            {
                                <tr>
                                    <td class="text-center fw-bold">@detail.JVDetailID</td>
                                    <td>
                                        @{
                                            var jv = jvs?.FirstOrDefault(j => j.JVID == detail.JVID);
                                        }
                                        @if (jv != null)
                                        {
                                            <span class="badge bg-primary">@jv.JVNumber</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        @{
                                            var account = accounts?.FirstOrDefault(a => a.AccountID == detail.AccountID);
                                        }
                                        @if (account != null)
                                        {
                                            <span class="badge bg-info">
                                                @(selectedLanguage == "Arabic" ? account.AccountNameAr : account.AccountNameEn)
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        @{
                                            var subAccount = subAccounts?.FirstOrDefault(sa => sa.SubAccountID == detail.SubAccountID);
                                        }
                                        @if (subAccount != null)
                                        {
                                            <span class="badge bg-warning text-dark">
                                                @(selectedLanguage == "Arabic" ? subAccount.SubAccountNameAr : subAccount.SubAccountNameEn)
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        @{
                                            var branch = branches?.FirstOrDefault(b => b.BranchID == detail.BranchID);
                                        }
                                        @if (branch != null)
                                        {
                                            <span class="badge bg-secondary">
                                                @(selectedLanguage == "Arabic" ? branch.BranchNameAr : branch.BranchNameEn)
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (detail.DebitAmount > 0)
                                        {
                                            <span class="badge bg-success">@detail.DebitAmount?.ToString("N2")</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @if (detail.CreditAmount > 0)
                                        {
                                            <span class="badge bg-danger">@detail.CreditAmount?.ToString("N2")</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-outline-secondary btn-sm" 
                                                    @onclick="() => EditJVDetail(detail)"
                                                    title="@(selectedLanguage == "Arabic" ? "تعديل" : "Edit")">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button class="btn btn-outline-info btn-sm" 
                                                    @onclick="() => ViewJVDetail(detail)"
                                                    title="@(selectedLanguage == "Arabic" ? "عرض" : "View")">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                            <button class="btn btn-outline-danger btn-sm" 
                                                    @onclick="() => DeleteJVDetail(detail)"
                                                    title="@(selectedLanguage == "Arabic" ? "حذف" : "Delete")">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="card shadow-sm">
            <div class="card-body text-center py-5">
                <i class="bi bi-list-ul display-1 text-muted mb-3"></i>
                <h4 class="text-muted">
                    @(selectedLanguage == "Arabic" ? "لا توجد تفاصيل" : "No JV Details Found")
                </h4>
                <p class="text-muted">
                    @(selectedLanguage == "Arabic" ? "لم يتم العثور على تفاصيل تطابق معايير البحث" : "No details match your search criteria")
                </p>
                <button class="btn btn-secondary" @onclick="AddNewJVDetail">
                    <i class="bi bi-plus-circle me-1"></i>
                    @(selectedLanguage == "Arabic" ? "إضافة أول تفصيل" : "Add First Detail")
                </button>
            </div>
        </div>
    }
</div>

@code {
    private List<JVDetail> jvDetails = new();
    private List<JV> jvs = new();
    private List<Account> accounts = new();
    private List<SubAccount> subAccounts = new();
    private List<Branch> branches = new();
    private string selectedLanguage = "Arabic";
    private bool isLoading = false;
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    
    // Filter properties
    private string searchTerm = string.Empty;
    private int selectedJVId = 0;
    private int selectedBranchId = 0;
    private string selectedAmountType = string.Empty;
    
    // Computed properties
    private List<JVDetail> filteredJVDetails => jvDetails
        .Where(d => string.IsNullOrEmpty(searchTerm) || 
                   d.Description.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
        .Where(d => selectedJVId == 0 || d.JVID == selectedJVId)
        .Where(d => selectedBranchId == 0 || d.BranchID == selectedBranchId)
        .Where(d => string.IsNullOrEmpty(selectedAmountType) || 
                   (selectedAmountType == "debit" && d.DebitAmount > 0) ||
                   (selectedAmountType == "credit" && d.CreditAmount > 0))
        .ToList();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;
            StateHasChanged();

            // Load data in parallel
            var jvDetailsTask = ApiService.GetAllAsync<JVDetail>("JVDetail");
            var jvsTask = ApiService.GetAllAsync<JV>("JV");
            var accountsTask = ApiService.GetAllAsync<Account>("Account");
            var subAccountsTask = ApiService.GetAllAsync<SubAccount>("SubAccount");
            var branchesTask = ApiService.GetAllAsync<Branch>("Branch");

            await Task.WhenAll(jvDetailsTask, jvsTask, accountsTask, subAccountsTask, branchesTask);

            jvDetails = await jvDetailsTask;
            jvs = await jvsTask;
            accounts = await accountsTask;
            subAccounts = await subAccountsTask;
            branches = await branchesTask;

            successMessage = selectedLanguage == "Arabic" 
                ? $"تم تحميل {jvDetails.Count} تفصيل و {jvs.Count} قيد و {accounts.Count} حساب"
                : $"Loaded {jvDetails.Count} details, {jvs.Count} vouchers, and {accounts.Count} accounts";
        }
        catch (Exception ex)
        {
            errorMessage = selectedLanguage == "Arabic"
                ? $"خطأ في تحميل البيانات: {ex.Message}"
                : $"Error loading data: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadJVDetails()
    {
        await LoadData();
    }

    private void AddNewJVDetail()
    {
        Navigation.NavigateTo("/jv-detail-form");
    }

    private void EditJVDetail(JVDetail detail)
    {
        Navigation.NavigateTo($"/jv-detail-form/{detail.JVDetailID}");
    }

    private void ViewJVDetail(JVDetail detail)
    {
        Navigation.NavigateTo($"/jv-detail-details/{detail.JVDetailID}");
    }

    private async Task DeleteJVDetail(JVDetail detail)
    {
        try
        {
            var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", 
                selectedLanguage == "Arabic"
                    ? $"هل أنت متأكد من حذف التفصيل رقم {detail.JVDetailID}؟"
                    : $"Are you sure you want to delete detail #{detail.JVDetailID}?");

            if (confirmed)
            {
                isLoading = true;
                StateHasChanged();

                var success = await ApiService.DeleteAsync("JVDetail", detail.JVDetailID);
                
                if (success)
                {
                    await LoadJVDetails();
                    successMessage = selectedLanguage == "Arabic"
                        ? "تم حذف التفصيل بنجاح"
                        : "Detail deleted successfully";
                }
                else
                {
                    errorMessage = selectedLanguage == "Arabic"
                        ? "فشل في حذف التفصيل"
                        : "Failed to delete detail";
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = selectedLanguage == "Arabic"
                ? $"خطأ في حذف التفصيل: {ex.Message}"
                : $"Error deleting detail: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void ChangeLanguage(string language)
    {
        selectedLanguage = language;
        StateHasChanged();
    }
} 